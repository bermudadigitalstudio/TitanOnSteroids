import TitanCore
import TitanRouter

// Overload all Titan instance methods which take a `Function` to take various convenient overloads.

extension Titan {
{% for method in type.Titan.methods %}
{% if method.parameters.last.typeName.name == "@escaping Function" %}
  public func {{ method.shortName }}({% for param in method.parameters %}{% if param.argumentLabel != param.name %}{{ param.argumentLabel }} {% endif %}{{ param.name }}: {% if param.typeName.name != "@escaping Function" %}{{ param.typeName }}{% else %}@escaping () -> Void{% endif %}{% if not forloop.last %}, {% endif %}{% endfor %}) {
    self.{{ method.shortName }}({% for param in method.parameters %}{% if param.argumentLabel != "_" %}{{ param.argumentLabel }}: {% endif %}{% if param.typeName.name != "@escaping Function" %}{{ param.name }}{% else %}toFunction({{param.name}}){% endif %}{% if not forloop.last %}, {% endif %}{% endfor %})
  }
  public func {{ method.shortName }}({% for param in method.parameters %}{% if param.argumentLabel != param.name %}{{ param.argumentLabel }} {% endif %}{{ param.name }}: {% if param.typeName.name != "@escaping Function" %}{{ param.typeName }}{% else %}@escaping () -> String{% endif %}{% if not forloop.last %}, {% endif %}{% endfor %}) {
    self.{{ method.shortName }}({% for param in method.parameters %}{% if param.argumentLabel != "_" %}{{ param.argumentLabel }}: {% endif %}{% if param.typeName.name != "@escaping Function" %}{{ param.name }}{% else %}toFunction({{param.name}}){% endif %}{% if not forloop.last %}, {% endif %}{% endfor %})
  }
  public func {{ method.shortName }}({% for param in method.parameters %}{% if param.argumentLabel != param.name %}{{ param.argumentLabel }} {% endif %}{{ param.name }}: {% if param.typeName.name != "@escaping Function" %}{{ param.typeName }}{% else %}@escaping (RequestType) -> String{% endif %}{% if not forloop.last %}, {% endif %}{% endfor %}) {
    self.{{ method.shortName }}({% for param in method.parameters %}{% if param.argumentLabel != "_" %}{{ param.argumentLabel }}: {% endif %}{% if param.typeName.name != "@escaping Function" %}{{ param.name }}{% else %}toFunction({{param.name}}){% endif %}{% if not forloop.last %}, {% endif %}{% endfor %})
  }
  public func {{ method.shortName }}({% for param in method.parameters %}{% if param.argumentLabel != param.name %}{{ param.argumentLabel }} {% endif %}{{ param.name }}: {% if param.typeName.name != "@escaping Function" %}{{ param.typeName }}{% else %}@escaping (RequestType) -> Int{% endif %}{% if not forloop.last %}, {% endif %}{% endfor %}) {
    self.{{ method.shortName }}({% for param in method.parameters %}{% if param.argumentLabel != "_" %}{{ param.argumentLabel }}: {% endif %}{% if param.typeName.name != "@escaping Function" %}{{ param.name }}{% else %}toFunction({{param.name}}){% endif %}{% if not forloop.last %}, {% endif %}{% endfor %})
  }
  public func {{ method.shortName }}({% for param in method.parameters %}{% if param.argumentLabel != param.name %}{{ param.argumentLabel }} {% endif %}{{ param.name }}: {% if param.typeName.name != "@escaping Function" %}{{ param.typeName }}{% else %}@escaping (inout Request, inout Response) -> Void{% endif %}{% if not forloop.last %}, {% endif %}{% endfor %}) {
    self.{{ method.shortName }}({% for param in method.parameters %}{% if param.argumentLabel != "_" %}{{ param.argumentLabel }}: {% endif %}{% if param.typeName.name != "@escaping Function" %}{{ param.name }}{% else %}toFunction({{param.name}}){% endif %}{% if not forloop.last %}, {% endif %}{% endfor %})
  }
  public func {{ method.shortName }}({% for param in method.parameters %}{% if param.argumentLabel != param.name %}{{ param.argumentLabel }} {% endif %}{{ param.name }}: {% if param.typeName.name != "@escaping Function" %}{{ param.typeName }}{% else %}@escaping (inout Request, inout Response) -> (RequestType, ResponseType){% endif %}{% if not forloop.last %}, {% endif %}{% endfor %}) {
    self.{{ method.shortName }}({% for param in method.parameters %}{% if param.argumentLabel != "_" %}{{ param.argumentLabel }}: {% endif %}{% if param.typeName.name != "@escaping Function" %}{{ param.name }}{% else %}toFunction({{param.name}}){% endif %}{% if not forloop.last %}, {% endif %}{% endfor %})
  }
{% endif %}
{% endfor %}
}
